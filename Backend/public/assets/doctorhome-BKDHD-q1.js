import"./modulepreload-polyfill-B5Qt9EMX.js";import{d as _,e as w,h as P,f as q,i as y,r as S}from"./checkdata-2EjErbRn.js";import{s as D}from"./snackbar-BNtgsuzo.js";import"./fetch-CGUiTqyx.js";const v=document.querySelector(".PopupPastEntry"),g=document.querySelector(".PopupSurvey"),p=document.querySelector(".calendarBackground"),m=document.getElementById("overlay");async function C(){g.style.display="flex",m.style.display="block",p.style.display="none";try{const e=await _();e?x(e):console.log("No survey data received")}catch(e){console.error("Failed to display survey data:",e),showSnackbar("Red","Error displaying survey data")}}function x(e){const n=document.querySelector("#surveyContent");n.innerHTML="",e&&e.questions?e.questions.forEach(a=>{const s=document.createElement("div");s.innerHTML=`<h5>${a.question}</h5><p>${a.answer}</p>`,n.appendChild(s)}):n.textContent="No survey data available."}async function k(e,n){console.log("Modal date: "+n),console.log("Modal month: "+e);const s=w(n);console.log(s);try{const c=P(e,n);if(console.log("Has entry for date:",c),c){const t=await q(n);document.querySelectorAll(".PopupPastEntry .EntryHeading").forEach(d=>{d.textContent=s}),document.querySelector(".PopupPastEntry .hrv #stress").textContent="Stressi-indeksi: "+t.measurement_data.stress_index,document.querySelector(".PopupPastEntry .hrv #sns").textContent="SNS-indeksi: "+t.measurement_data.sns_index,document.querySelector(".PopupPastEntry .hrv #pns").textContent="PNS-indeksi: "+t.measurement_data.pns_index,document.querySelector(".PopupPastEntry .hrv #rmssd").textContent="RMSSD: "+t.measurement_data.rmssd_ms,document.querySelector(".PopupPastEntry .hrv #sdnn").textContent="SDNN: "+t.measurement_data.sdnn_ms,document.querySelector(".PopupPastEntry .hrv #rr").textContent="Mean RR: "+t.measurement_data.mean_rr_ms,document.querySelector(".PopupPastEntry .hrv #lf").textContent="LF power: "+t.measurement_data.lf_power,document.querySelector(".PopupPastEntry .hrv #hf").textContent="HF power: "+t.measurement_data.hf_power,document.querySelector(".PopupPastEntry .hrv #lf_nu").textContent="LF n.u.: "+t.measurement_data.lf_power_nu,document.querySelector(".PopupPastEntry .hrv #hf_nu").textContent="HF n.u.: "+t.measurement_data.hf_power_nu,document.querySelector(".PopupPastEntry .hrv #total").textContent="LF/HF ratio: "+t.measurement_data.tot_power;const u=t.activities&&t.activities.length>0?t.activities.join(", "):"No activities";document.querySelector(".PopupPastEntry .activitiesPast p").textContent=u,document.querySelector(".PopupPastEntry .notesPast p").textContent=t.diary_entry.notes||"No notes",v.style.display="flex",p.style.display="none",m.style.display="block"}else alert("No entry found for the selected date.")}catch(c){console.error("Error fetching entry data:",c)}}function L(){v.style.display="none",g.style.display="none",p.style.display="block",m.style.display="none"}let l=new Date,r=l.getFullYear(),o=l.getMonth();const M=document.querySelectorAll(".calendarHeader span");let i={};const F=async()=>{i=await y(r,o+1),console.log(i),S(r,o,i)},N=async e=>{o=e.id==="prev"?o-1:o+1,o<0||o>11?(l=new Date(r,o,new Date().getDate()),r=l.getFullYear(),o=l.getMonth()):l=new Date;const n=await y(r,o+1);console.log(n),S(r,o,n)};M.forEach(e=>{e.addEventListener("click",()=>{N(e)})});window.addEventListener("load",()=>{F()});const H=document.querySelector(".calendar");H.addEventListener("click",async e=>{if(e.target.tagName==="LI"&&e.target.parentElement.classList.contains("days")){const n=parseInt(e.target.textContent),a=new Date(r,o,n);if(a>new Date||e.target.classList.contains("inactive"))return;const c=a.getDate().toString().padStart(2,"0"),t=(a.getMonth()+1).toString().padStart(2,"0"),u=`${a.getFullYear()}-${t}-${c}`;console.log("Clicked date:",u);const d=await y(r,o+1),h=P(d,u);console.log("Has entry for date:",h),h?k(d,u):D("Red","Ei tehtyä merkintää")}});const Y=document.querySelector(".surveyBtn");Y.addEventListener("click",()=>{C()});const I=document.querySelectorAll(".closePopup");I.forEach(e=>{e.addEventListener("click",L)});const f=localStorage.getItem("full_name");console.log(f);const b=document.querySelector("#username");b.textContent=f;const R=window.location.search,$=new URLSearchParams(R),E=$.get("client");localStorage.setItem("userId",E);console.log(E);
